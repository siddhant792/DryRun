# Generated by Django 4.0.1 on 2022-01-08 21:13

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of Problem', max_length=100)),
                ('slug', models.CharField(help_text='Problem slug', max_length=100)),
                ('statement', models.TextField(help_text='Problem statement', max_length=1000)),
                ('difficulty', models.CharField(choices=[('EASY', 'Easy'), ('MEDIUM', 'Medium'), ('HARD', 'Hard')], help_text='Problem difficulty level', max_length=100)),
                ('follow_up', models.CharField(blank=True, help_text='Problem follow up', max_length=500)),
                ('driver_code', models.TextField(help_text='Driver Code of the problem')),
                ('helper_function', models.TextField(help_text='Function where of the user writes logic')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('input', models.CharField(help_text='Input', max_length=2000)),
                ('output', models.CharField(help_text='Output', max_length=2000)),
                ('explaination', models.CharField(help_text='Explaintion of the testcase', max_length=500)),
                ('is_hidden', models.BooleanField(default=True, help_text='If the test case is visible to the user')),
                ('problem', models.ForeignKey(help_text='The problem to which the testcase belongs', on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the tag', max_length=100)),
                ('problem', models.ForeignKey(help_text='The problem to which the testcase belongs', on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Submission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('ACCEPTED', 'Accepted'), ('WRONG ANSWER', 'Wrong Answer'), ('RUNTIME ERROR', 'Runtime Error'), ('TIME LIMIT EXCEEDED', 'Time Limit Exceeded'), ('COMPILATION ERROR', 'Compilation Error'), ('MEMORY LIMIT EXCEEDED', 'Memory Limit Exceeded')], help_text='If the submission is accepted or not', max_length=100)),
                ('runtime', models.CharField(help_text='Time taken to run all the test cases', max_length=300)),
                ('language_used', models.CharField(choices=[('JAVA', 'Java'), ('C++', 'C++'), ('C', 'C'), ('PYTHON', 'Python'), ('JAVASCRIPT', 'JavaScript')], help_text='Programming language used to submit the problem', max_length=200)),
                ('problem', models.ForeignKey(help_text='The problem to which the submission belongs', on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
                ('user', models.ForeignKey(help_text='The user which has made this submission', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complexity_analysis', models.CharField(help_text='Complexity analysis of the solution', max_length=1000)),
                ('explaination', models.CharField(help_text='Explaintion of the solution', max_length=1000)),
                ('code', models.JSONField(help_text="Code of the problem's solution")),
                ('problem', models.ForeignKey(help_text='The problem to which the solution belongs', on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
        ),
        migrations.CreateModel(
            name='Constraint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('given_constraint', models.CharField(help_text='Constraint for the problem', max_length=500)),
                ('problem', models.ForeignKey(help_text='The problem to which the constraint belongs', on_delete=django.db.models.deletion.CASCADE, to='problems.problem')),
            ],
        ),
    ]
